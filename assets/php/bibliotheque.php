<?php

//<li><input type="reset" class="style2" value="Reset" /></li>

//bibliotheque de fonctions 
//Ne pas oublier d'appeler les fonctions dans index.php sinon elles ne se declenchent pas toutes seules les f√©n√©antes

//Possibilit√© de cr√©er des alias afin de faciliter la modification et la maintenabilit√© du code 

/*
define("USER_BDD", "root");
define("NAME_BDD", "Wassingue");
define("HOST_BDD", "localhost");
define("MDP_BDD", "");
define("NAME_BDD_PRINCIPAL", "mysql");
define("NAME_TABLE", "yahourt");
*/





// fonction pour se connecter √† mysql une premiere fois afin de pouvoir cr√©er une bdd

//connexion premi√®re
function connexion_bdd_mysql()
{
    try {
        $db = new PDO('mysql:host=localhost;dbname=mysql;charset=utf8', 'root', '');
        echo "connexion r√©ussie √† la base de donn√©es mysql<br>";
    } catch (Exception $e) {
        'Erreur : ' . $e->getMessage();
    }
    return $db;
    close_connexion($db);
};

// fonction pour se connecter √† une base de donn√©es existante, en l'occurence Wassingue
//connexion √† la base de donn√©es Wassingue
function connexion_bdd()
{
    try {
        $db = new PDO('mysql:host=localhost;dbname=Wassingue;charset=utf8', 'root', '');
        echo "connexion r√©ussie √† la base de donn√©es<br>";
    } catch (Exception $e) {
        'Erreur : ' . $e->getMessage();
    }
    return $db;
};

//fermeture de la connexion √† la bdd
function close_connexion($db)
{

    $db = null;
}


//fonction pour cr√©er une table
function creation_table()
{
    try {
        //utilisation de la fonction de connexion √† la base de donn√©es
        //Attention au nom d la base de donn√©e pr√©alablement cr√©e => Wassingue
        $db = connexion_bdd();

        // cr√©ation d'une table nomm√©e yahourt

        $tablePers = "CREATE TABLE IF NOT EXISTS yahourt /* NAME_TABLE*/ (
            id INT NOT NULL AUTO_INCREMENT,
            nom VARCHAR(50) NOT NULL,
            email VARCHAR(100) NOT NULL,
            descript TEXT NOT NULL,
            PRIMARY KEY (id)       
        )";
        $stmt = $db->prepare($tablePers);
        $stmt->execute();
        //message de confirmation   
        echo "Table pers cr√©√©e ou d√©j√† existante<br>";
    } catch (Exception $e) {
        'Erreur : ' . $e->getMessage();
    } finally {
        //utilisation de la fonction de fermeture de connexion √† la base de donn√©es
        close_connexion($db);
    }
}

/*Lors de l'insertion de donn√©es dans une base de donn√©es, les contraintes NOT NULL d√©finissent que certaines colonnes ne peuvent pas contenir de valeurs NULL (c'est-√†-dire vides). Cependant, dans certains cas, lorsque vous ins√©rez des donn√©es √† partir d'un formulaire, les champs vides peuvent √™tre interpr√©t√©s comme des cha√Ænes de caract√®res vides ("") plut√¥t que comme des valeurs NULL.

Cela signifie que m√™me si un champ est laiss√© vide dans le formulaire, lors de la soumission, PHP consid√©rera ce champ comme une cha√Æne vide et l'ins√©rera dans la base de donn√©es. Ainsi, les contraintes NOT NULL ne sont pas viol√©es, car une cha√Æne vide est une valeur valide pour les colonnes d√©finies comme NOT NULL.

Si vous souhaitez emp√™cher l'insertion de champs vides dans des colonnes NOT NULL, vous pouvez effectuer une v√©rification suppl√©mentaire avant d'ex√©cuter la requ√™te d'insertion. Par exemple, vous pouvez ajouter une condition pour v√©rifier si les champs obligatoires sont vides avant d'ex√©cuter l'instruction d'insertion. Si un champ obligatoire est vide, vous pouvez afficher un message d'erreur ou emp√™cher l'insertion des donn√©es tant que tous les champs obligatoires ne sont pas remplis.

En r√©sum√©, lors de l'insertion de donn√©es via un formulaire, les champs vides sont g√©n√©ralement interpr√©t√©s comme des cha√Ænes vides et ne violent pas les contraintes NOT NULL. Pour emp√™cher l'insertion de champs vides dans des colonnes NOT NULL, vous pouvez effectuer des v√©rifications suppl√©mentaires avant l'ex√©cution de la requ√™te d'insertion. */


//fonction pour ins√©rer manuellement des donn√©es dans la table NAME_TABLE
//sert surtout √† tester sa base de donn√©es 

function inser_brut()
{

    //utilisation de la fonction de connexion √† la bdd NAME_BDD
    $db = connexion_bdd();
    $nom_table = "contact";
    $nom = "Joul";
    $mail = "Croissant@youpimail.com";
    $descript = "on dit chocolatines";

    $sql = "INSERT INTO $nom_table (nom, mail, descript)
            VALUES (:nom, :mail, :descript)";

    $stmt = $db->prepare($sql);
    $stmt->bindParam(":nom", $nom);
    $stmt->bindParam(":mail", $mail);
    $stmt->bindParam(":descript", $descript);
    $stmt->execute();

    //message de confirmation
    echo "Insertion r√©ussie.<br>";
    //utilisation de la fonction pour fermer la connexion √† la bdd
    close_connexion($db);
}

//fonction pour inserer les donn√©es re√ßues via le formulaire contact du portfolio
function inser()
{

    //si la valeur pass√© via la methode POST est d√©finie ET est non nulle cf commentaire au dessus => isset
    //pour v√©rifier que le champs du formulaire est correctement rempli

    if (isset($_POST["submit"]) && $_POST["submit"] === "Envoyer le message") {
        //utilisation de la fonction pour se connecter √† la bdd portfolio_bdd
        $db = connexion_bdd();
        $nom_table = "contact";

        //modifier ? $_POST["nom"] : "" pour faire en sorte que le formulaire n'accepte pas les chaines de charact√®res vides
        //if (!empty($nom)) => √† affiner
        $nom = isset($_POST["nom"]) ? $_POST["nom"] : "";
        $mail = isset($_POST["mail"]) ? $_POST["mail"] : "";
        strip_tags($nom);
        strip_tags($mail);
        $descript = isset($_POST["descript"]) ? $_POST["descript"] : "";

        $sql = "INSERT INTO $nom_table (nom, mail, descript)
                VALUES (:nom, :mail, :descript)";

        $stmt = $db->prepare($sql);
        $stmt->bindParam(":nom", $nom);
        $stmt->bindParam(":mail", $mail);
        $stmt->bindParam(":descript", $descript);
        $stmt->execute();
        //message de confirmation
        echo "Insertion r√©ussie.";
        //utilisation de la fonction pour se d√©connecter de la bdd
        close_connexion($db);
    } else {
        $db = connexion_bdd();
        //message de confirmation
        echo "Le formulaire n'a pas √©t√© soumis correctement.";
        //utilisation de la fonction de fermeture de connexion √† la bdd
        close_connexion($db);
    }
}

/*
function inser()
{
    if (isset($_POST["submit"]) || $_POST["submit"] == "submit") {
        // V√©rifier que les champs obligatoires ne sont pas vides
        echo ("üçï");
        if (!empty($_POST["nom"]) && !empty($_POST["mail"])) {
            // Utilisation de la fonction pour se connecter √† la bdd TrouverUnJobPourMoussa
            $db = connexion_bdd();
            $nom_table = "proteine";
            $nom = strip_tags($_POST["nom"]);
            $mail = strip_tags($_POST["mail"]);
            $descript = isset($_POST["messages"]) ? $_POST["messages"] : "";

            // La requ√™te d'insertion n'est ex√©cut√©e que si les champs obligatoires ne sont pas vides
            $sql = "INSERT INTO $nom_table (nom, mail, messages)
                    VALUES (:nom, :mail, :messages)";

            $stmt = $db->prepare($sql);
            $stmt->bindParam(":nom", $nom);
            $stmt->bindParam(":mail", $mail);
            $stmt->bindParam(":messages", $descript);
            $stmt->execute();
            // Message de confirmation
            echo "Insertion r√©ussie, Modafoka";
            // Utilisation de la fonction pour se d√©connecter de la bdd
            close_connexion($db);
        } else {
            // Afficher un message d'erreur si des champs obligatoires sont vides
            echo "Veuillez remplir tous les champs obligatoires (nom, mail).";
        }
    } else {
        $db = connexion_bdd();
        // Message de confirmation
        echo "Le formulaire n'a pas √©t√© soumis correctement.";
        // Utilisation de la fonction de fermeture de connexion √† la bdd
        close_connexion($db);
    }
}
*/
//si ce qu'on a r√©cup√©r√© via la methode POST (login et pass) sont d√©finis

function inser_incription(){

if( isset($_POST["login"]) && isset($_POST["pass"]) )
{
    require __DIR__."/../config.php";
    $pass = $_POST["pass"];
    $repass = $_POST["repass"];
    $login = $_POST["login"];
    // on g√©n√©re une requete qui va v√©rifier selon le login 
    $sel=$pdo->prepare("select id from utilisateur where login=:login limit 1");
    // on execute la require
    $sel->execute([
        "login" => $login
    ]);
    $tab=$sel->fetchAll();
    // Si le nombre de retour est sup√©rieur √† 0 donc s'il y en a au moins 1 cela veut dire que l'utilisateur existe d√©ja
    var_dump($tab);
    if(count($tab)>0){
        session_start();
        $erreur="Login existe d√©j√†";
        $_SESSION["flash"] = $erreur;
        header("location:login.php");
    }
    else{
        //si le mot de passe et la confirmation du mot de passe concordent    
        if($pass === $repass){

        // Si l'utilisateur n'existe pas on insere l'utilisateur
        $sql=$pdo->prepare("insert into utilisateur(nom,prenom,login,pass,role) values(:nom,:prenom,:login,:pass, 'utilisateur')");
        $nom = $_POST["nom"];
        $prenom = $_POST["prenom"];
        $pass = $_POST["pass"];
        $sql->execute([
            "nom"=>$nom,
            "prenom"=>$prenom,
            "login"=>$login, 
            "pass" => password_hash($pass, PASSWORD_BCRYPT)     
        ]);
        // Si la requete d'insertion est reussie alors on redirige vers la page de login
        header("location:login.php");
        }   
        // si le mot de passe et la confirmation du mot de passe ne sont pas identiques
        else {
            //on initialise la session qui n'est pas accessible depuis l'interieur de la fonction
            session_start();
            //message d'erreur
            $erreur="Les mots de passes ne sont pas identiques";
            $_SESSION["flash"] = $erreur;
            //redirection vers la page d'inscription 
            header("location:inscription.php");
        }
    }   
}
else{
    session_start();
    $erreur="Les mots de passes ne sont pas identiques";
    $_SESSION["flash"] = $erreur;
    header("location:inscription.php");
}
};